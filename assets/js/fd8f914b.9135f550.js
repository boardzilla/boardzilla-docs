"use strict";(self.webpackChunkboardzilla_docs=self.webpackChunkboardzilla_docs||[]).push([[9776],{3994:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(5893),n=t(1151);const r={},i="Best Practices",a={id:"cookbook/best_practices",title:"Best Practices",description:"Recipies that will help you achieve success easier.",source:"@site/docs/cookbook/best_practices.md",sourceDirName:"cookbook",slug:"/cookbook/best_practices",permalink:"/cookbook/best_practices",draft:!1,unlisted:!1,editUrl:"https://github.com/boardzilla/boardzilla-docs/tree/main/docs/cookbook/best_practices.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cookbook",permalink:"/cookbook/"},next:{title:"Game Development",permalink:"/cookbook/game"}},c={},l=[{value:"Build the Game Before the UI",id:"build-the-game-before-the-ui",level:2},{value:"Break Pieces Into Modules",id:"break-pieces-into-modules",level:2},{value:"Do Blocks Are Arrays",id:"do-blocks-are-arrays",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h1,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(o.p,{children:"Recipies that will help you achieve success easier."}),"\n",(0,s.jsx)(o.h2,{id:"build-the-game-before-the-ui",children:"Build the Game Before the UI"}),"\n",(0,s.jsx)(o.p,{children:"The default UI will likely be sufficient to develop your game. Spend type implementing the rules to your game before you spend a bunch of time on UI layout."}),"\n",(0,s.jsx)(o.h2,{id:"break-pieces-into-modules",children:"Break Pieces Into Modules"}),"\n",(0,s.jsx)(o.p,{children:"Turn your lists of game pieces, such as Cards into modules. This will keep your main game code less cluttered and easier to follow:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-ts",children:'import { Card } from "./index.js";\n\nexport const cards: Partial<Card>[] = [\n  {\n    name: "red1",\n    color: "red",\n    value: 1,\n    quantity: 4,\n  },\n];\n'})}),"\n",(0,s.jsx)(o.h2,{id:"do-blocks-are-arrays",children:"Do Blocks Are Arrays"}),"\n",(0,s.jsxs)(o.p,{children:["Whenever you see a ",(0,s.jsx)(o.code,{children:"do"})," parameter, like when you are using the ",(0,s.jsx)(o.code,{children:"WhileLoop"})," in a Game Flow note that you should treat it like an array of functions."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-ts",children:"whileLoop({\n      while: () => game.match < 4,\n      do: [ ... ]\n})\n"})})]})}function u(e={}){const{wrapper:o}={...(0,n.a)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>a,a:()=>i});var s=t(7294);const n={},r=s.createContext(n);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);