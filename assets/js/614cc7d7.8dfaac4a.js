"use strict";(self.webpackChunkboardzilla_docs=self.webpackChunkboardzilla_docs||[]).push([[9154],{572:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var s=t(5893),i=t(1151);const l={id:"Action",title:"Class: Action<P, A>",sidebar_label:"Action",sidebar_position:7,custom_edit_url:null},c=void 0,r={id:"api/classes/Action",title:"Class: Action<P, A>",description:"Actions represent discreet moves players can make. These contain the choices",source:"@site/docs/api/classes/Action.md",sourceDirName:"api/classes",slug:"/api/classes/Action",permalink:"/api/classes/Action",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"Action",title:"Class: Action<P, A>",sidebar_label:"Action",sidebar_position:7,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"README",permalink:"/api/"},next:{title:"Board",permalink:"/api/classes/Board"}},d={},o=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Behaviour",id:"behaviour",level:2},{value:"do",id:"do",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"message",id:"message",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"move",id:"move",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"Choices",id:"choices",level:2},{value:"chooseFrom",id:"choosefrom",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"enterText",id:"entertext",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"chooseNumber",id:"choosenumber",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"chooseOnBoard",id:"chooseonboard",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"chooseGroup",id:"choosegroup",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"placePiece",id:"placepiece",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Actions represent discreet moves players can make. These contain the choices\nneeded to take this action and the results of the action. Create Actions\nusing the ",(0,s.jsx)(n.a,{href:"/api/classes/Game#action",children:"Game#action"})," function. Actions are evaluated at the time the\nplayer has the option to perform the action, so any expressions that involve\ngame state will reflect the state at the time the player is performing the\naction."]}),"\n",(0,s.jsx)(n.h2,{id:"type-parameters",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"P"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.a,{href:"/api/classes/Player",children:(0,s.jsx)(n.code,{children:"Player"})})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"A"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> = ",(0,s.jsx)(n.code,{children:"NonNullable"}),"<",(0,s.jsx)(n.code,{children:"unknown"}),">"]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"behaviour",children:"Behaviour"}),"\n",(0,s.jsx)(n.h3,{id:"do",children:"do"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"do"}),"(",(0,s.jsx)(n.code,{children:"move"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["Add behaviour to this action to alter game state. After adding the choices\nto an action, calling ",(0,s.jsx)(n.code,{children:"do"})," causes Boardzilla to use the player choices to\nactually do something with those choices. Call this method after all the\nmethods for player choices so that the choices are properly available to\nthe ",(0,s.jsx)(n.code,{children:"do"})," function."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"move"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"any"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The action to perform. This function accepts one argument with key-value pairs for each choice added to the action using the provided names."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"player => action({\n  prompt: 'Take resources',\n}).chooseFrom({\n  'resource', ['lumber', 'steel'],\n  { prompt: 'Select resource' }\n}).chooseNumber(\n  'amount', {\n    prompt: 'Select amount',\n    max: 3\n}).do(({ resource, amount }) => {\n  // the choices are automatically passed in with their proper type\n  board.firstN(amount, Resource, {resource}).putInto(\n    player.my('stockPile')\n  );\n})\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L301",children:"boardzilla-core/src/action/action.ts:301"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"message",children:"message"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"message"}),"(",(0,s.jsx)(n.code,{children:"message"}),", ",(0,s.jsx)(n.code,{children:"args?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["Add a message to this action that will be broadcast in the chat. Call this\nmethod after all the methods for player choices so that the choices are\nproperly available to the ",(0,s.jsx)(n.code,{children:"message"})," function. However the message should be\ncalled before or after any ",(0,s.jsx)(n.code,{children:"do"})," behaviour depending on whether you want the\nmessage to reflect the game state before or after the move is performs. The\naction's ",(0,s.jsx)(n.code,{children:"message"})," and ",(0,s.jsx)(n.code,{children:"do"})," functions can be intermixed in this way to\ngenerate messages at different points int the execution of a move."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"message"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The message to send. This can contain interpolated strings with double braces just as when calling ",(0,s.jsx)(n.a,{href:"/api/classes/Game#message",children:"Game#message"})," directly. However when using this method, the player performing the action, plus any choices made in the action are automatically made available."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"args?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"a"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"If additional strings are needed in the message besides 'player' and the player choices, these can be specified here. This can also be specified as a function that accepts the player choices and returns key-value pairs of strings for interpolation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"action({\n  prompt: 'Say something',\n}).enterText({\n  'message',\n}).message(\n  '{{player}} said {{message}}' // no args needed\n).message(\n  \"I said, {{player}} said {{loudMessage}}\",\n  ({ message }) => ({ loudMessage: message.toUpperCase() })\n)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L339",children:"boardzilla-core/src/action/action.ts:339"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"move",children:"move"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"move"}),"(",(0,s.jsx)(n.code,{children:"piece"}),", ",(0,s.jsx)(n.code,{children:"into"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Indicates that this action does a move with the selected elements. This is\nalmost the equivalent of calling Action#do and adding a putInto command,\nexcept that the game will also permit the UI to allow a mouse drag for the\nmove."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"piece"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["keyof ",(0,s.jsx)(n.code,{children:"A"})," | ",(0,s.jsx)(n.a,{href:"/api/classes/Piece",children:(0,s.jsx)(n.code,{children:"Piece"})}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A ",(0,s.jsx)(n.a,{href:"/api/classes/Piece",children:"Piece"})," to move or the name of the piece selection in this action"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"into"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:(0,s.jsx)(n.code,{children:"GameElement"})}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),"> | keyof ",(0,s.jsx)(n.code,{children:"A"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A ",(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:"GameElement"})," to move into or the name of the destination selection in this action. player => action({ prompt: 'Discard a card from hand' }).chooseOnBoard( 'card', player.my(Card) ).move( 'card', $.discard )"]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L805",children:"boardzilla-core/src/action/action.ts:805"})}),"\n",(0,s.jsx)(n.h2,{id:"choices",children:"Choices"}),"\n",(0,s.jsx)(n.h3,{id:"choosefrom",children:"chooseFrom"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"chooseFrom"}),"<",(0,s.jsx)(n.code,{children:"N"}),", ",(0,s.jsx)(n.code,{children:"T"}),">(",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"choices"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }>"]}),"\n",(0,s.jsx)(n.p,{children:"Add a choice to this action from a list of options. These choices will be\ndisplayed as buttons in the UI."}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"string"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"T"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"boolean"})," | ",(0,s.jsx)(n.a,{href:"/api/classes/Player",children:(0,s.jsx)(n.code,{children:"Player"})}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),"> | ",(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:(0,s.jsx)(n.code,{children:"GameElement"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of this choice. This name will be used in all functions that accept the player's choices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"choices"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"T"}),"[] | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"T"}),"> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"T"}),"[] | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"T"}),">"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Either an array of choices or an object with a key-value pair of choices. Use the object style when you want player text to contain additional logic that you don't want to reference in the game logic, similiar to ",(0,s.jsx)(n.code,{children:'<option value="key">Some text</option>'})," in HTML. This can also be a function that returns the choice array/object. This function will accept arguments for each choice the player has made up to this point in the action."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.prompt?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Prompt displayed to the user for this choice."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.confirm?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | [",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }) => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>]"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as ",(0,s.jsx)(n.a,{href:"/api/classes/Action#message",children:"message"})," with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }) => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.skipIf?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:'"always"'})," | ",(0,s.jsx)(n.code,{children:'"never"'})," | ",(0,s.jsx)(n.code,{children:'"only-one"'})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["One of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). ",(0,s.jsxs)(n.ul,{children:[" ",(0,s.jsx)(n.li,{children:"only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. "}),(0,s.jsxs)(n.li,{children:["always: Rather than present this choice directly, the player will be prompted with choices from the ",(0,s.jsx)(n.em,{children:"next choice"})," in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. "]}),(0,s.jsx)(n.li,{children:"never: Always present this choice, even if the choice is forced "}),(0,s.jsx)(n.li,{children:"function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. "})]})]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }>"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"action({\n  prompt: 'Choose color',\n}).chooseFrom(\n  'color', ['white', 'blue', 'red'],\n).do(\n  ({ color }) => ... color will be equal to the player-selected color ...\n)\n\n// a more complex example:\naction({\n  prompt: 'Take resources',\n}).chooseFrom(\n  'resource', ['lumber', 'steel', 'oil'],\n  { prompt: 'Select resource' }\n).chooseFrom(\n  // Use the functional style to include the resource choice in the text\n  // Also use object style to have the value simply be \"high\" or \"low\"\n  'grade', resource => ({\n    high: `High grade ${resource}`,\n    low: `Low grade ${resource}`\n  }),\n  {\n    // A follow-up choice that doesn't apply to \"oil\"\n    skipIf: ({ resource }) => resource === 'oil',\n    // Add an 'are you sure?' message\n    confirm: ['Buy {{grade}} grade {{resource}}?', ({ grade }) = ({ grade: grade.toUpperCase() })]\n  }\n).do (\n  ({ resource, grade }) => {\n    // resource will equal 'lumber', 'steel' or 'oil'\n    // grade will equal 'high' or 'low'\n  }\n)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L432",children:"boardzilla-core/src/action/action.ts:432"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"entertext",children:"enterText"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"enterText"}),"<",(0,s.jsx)(n.code,{children:"N"}),">(",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: string }>"]}),"\n",(0,s.jsx)(n.p,{children:"Prompt the user for text entry. Use this in games where players submit\ntext, like word-guessing games."}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters-2",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"string"})]})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of this text input. This name will be used in all functions that accept the player's choices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.prompt?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Prompt displayed to the user for entering this text."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: string }) => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this text. If a string is returned, this will display as the reason for disallowing this text."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.regexp?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"RegExp"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.initial?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Default text that can appear initially before a user types."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: string }>"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"action({\n  prompt: 'Guess a word',\n}).enterText({\n  'guess',\n  { prompt: 'Your guess', }\n}).message(\n  guess => `{{player}} guessed ${guess}`\n})\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L476",children:"boardzilla-core/src/action/action.ts:476"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"choosenumber",children:"chooseNumber"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"chooseNumber"}),"<",(0,s.jsx)(n.code,{children:"N"}),">(",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: number }>"]}),"\n",(0,s.jsx)(n.p,{children:"Add a numerical choice for this action. This will be presented with a\nnumber picker."}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters-3",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"string"})]})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of this choice. This name will be used in all functions that accept the player's choices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.min?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"number"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Minimum allowed. Default 1."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.max?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"number"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Maximum allowed. Default Infinity"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.prompt?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Prompt displayed to the user for entering this number."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.confirm?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | [",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: number }) => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>]"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as ",(0,s.jsx)(n.a,{href:"/api/classes/Action#message",children:"message"})," with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: number }) => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.initial?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"number"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Initial value to display in the picker"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.skipIf?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:'"always"'})," | ",(0,s.jsx)(n.code,{children:'"never"'})," | ",(0,s.jsx)(n.code,{children:'"only-one"'})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["One of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). ",(0,s.jsxs)(n.ul,{children:[" ",(0,s.jsx)(n.li,{children:"only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. "}),(0,s.jsxs)(n.li,{children:["always: Rather than present this choice directly, the player will be prompted with choices from the ",(0,s.jsx)(n.em,{children:"next choice"})," in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. "]}),(0,s.jsx)(n.li,{children:"never: Always present this choice, even if the choice is forced "}),(0,s.jsx)(n.li,{children:"function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. "})]})]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: number }>"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"player => action({\n  prompt: 'Buy resources',\n}).chooseNumber(\n  'amount', {\n    min: 5,\n    max: 10 // select from 5 - 10\n}).do(\n  ({ amount }) => player.resource += amount\n);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L551",children:"boardzilla-core/src/action/action.ts:551"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"chooseonboard",children:"chooseOnBoard"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"chooseOnBoard"}),"<",(0,s.jsx)(n.code,{children:"T"}),", ",(0,s.jsx)(n.code,{children:"N"}),">(",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"choices"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }>"]}),"\n",(0,s.jsx)(n.p,{children:"Add a choice to this action using the board. Users will click on the board\nto make their choice."}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters-4",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"T"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:(0,s.jsx)(n.code,{children:"GameElement"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"string"})]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"N"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of this choice. This name will be used in all functions that accept the player's choices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"choices"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"BoardQueryMulti"}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"T"}),", ",(0,s.jsx)(n.code,{children:"A"}),">"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Elements that may be chosen. This can either be an array of elements or a function returning an array, if the choices depend on previous choices. If using a function, it will accept arguments for each choice the player has made up to this point in the action."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.prompt?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Prompt displayed to the user for this choice."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.confirm?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | [",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }) => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>]"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as ",(0,s.jsx)(n.a,{href:"/api/classes/Action#message",children:"message"})," with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices up to this point, including this one, and returns the interpolation object."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }) => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.min?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If supplied, the choice is for a ",(0,s.jsx)(n.em,{children:"set"})," of elements and the minimum required is ",(0,s.jsx)(n.code,{children:"min"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.max?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If supplied, the choice is for a ",(0,s.jsx)(n.em,{children:"set"})," of elements and the maximum allowed is ",(0,s.jsx)(n.code,{children:"max"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.number?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If supplied, the choice is for a ",(0,s.jsx)(n.em,{children:"set"})," of exactly ",(0,s.jsx)(n.code,{children:"number"})," elements. For example, if the player is being asked to pass 3 cards from their hand, the ",(0,s.jsx)(n.code,{children:"choices"})," should be to the cards in their hand and the ",(0,s.jsx)(n.code,{children:"number"})," to 3."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.skipIf?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:'"always"'})," | ",(0,s.jsx)(n.code,{children:'"never"'})," | ",(0,s.jsx)(n.code,{children:'"only-one"'})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["One of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). ",(0,s.jsxs)(n.ul,{children:[" ",(0,s.jsx)(n.li,{children:"only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. "}),(0,s.jsxs)(n.li,{children:["always: Rather than present this choice directly, the player will be prompted with choices from the ",(0,s.jsx)(n.em,{children:"next choice"})," in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. "]}),(0,s.jsx)(n.li,{children:"never: Always present this choice, even if the choice is forced "}),(0,s.jsx)(n.li,{children:"function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. "})]})]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { [key in string]: T }>"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"player => action({\n  prompt: 'Mulligan',\n}).chooseOnBoard(\n  'cards', player.allMy(Card), {\n    prompt: 'Mulligan 1-3 cards',\n    // select 1-3 cards from hand\n    min: 1,\n    max: 3\n).do(\n  ({ cards }) => {\n    // `cards` is an ElementCollection of the cards selected\n    cards.putInto($.discard);\n    $.deck.firstN(cards.length, Card).putInto(player.my('hand')!);\n  }\n)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L645",children:"boardzilla-core/src/action/action.ts:645"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"choosegroup",children:"chooseGroup"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"chooseGroup"}),"<",(0,s.jsx)(n.code,{children:"R"}),">(",(0,s.jsx)(n.code,{children:"choices"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"ExpandGroup"}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),", ",(0,s.jsx)(n.code,{children:"R"}),">>"]}),"\n",(0,s.jsx)(n.p,{children:"Create a multi-selection choice. These selections will be presented all at\nonce as a form."}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters-5",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"R"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,s.jsx)(n.code,{children:"Group"}),"<",(0,s.jsx)(n.code,{children:"P"}),">"]})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"choices"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"R"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["An object containing the selections. This is a set of key-value pairs where each key is the name of the selection and each value is an array of options where the first array element is a string indicating the type of choice ('number', 'select', 'board', 'text') and subsequent elements contain the options for the appropriate choice function (",(0,s.jsx)(n.code,{children:"chooseNumber"}),", ",(0,s.jsx)(n.code,{children:"chooseFrom"}),", ",(0,s.jsx)(n.code,{children:"chooseOnBoard"})," or ",(0,s.jsx)(n.code,{children:"enterText"}),")."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"ExpandGroup"}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),", ",(0,s.jsx)(n.code,{children:"R"}),">) => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit these choices. If a string is returned, this will display as the reason for disallowing these selections."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.confirm?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | [",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"ExpandGroup"}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),", ",(0,s.jsx)(n.code,{children:"R"}),">) => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>]"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as ",(0,s.jsx)(n.a,{href:"/api/classes/Action#message",children:"message"})," with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"ExpandGroup"}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"}),", ",(0,s.jsx)(n.code,{children:"R"}),">>"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"action({\n  prompt: 'purchase'\n}).chooseGroup({\n  lumber: ['number', { min: 2 }],\n  steel: ['number', { min: 2 }]\n}, {\n  // may not purchase more than 10 total resources\n  validate: ({ lumber, steel }) => lumber + steel <= 10\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L759",children:"boardzilla-core/src/action/action.ts:759"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"placepiece",children:"placePiece"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"placePiece"}),"(",(0,s.jsx)(n.code,{children:"piece"}),", ",(0,s.jsx)(n.code,{children:"into"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { ",(0,s.jsx)(n.code,{children:"__placement__"}),": [",(0,s.jsx)(n.code,{children:"number"}),", ",(0,s.jsx)(n.code,{children:"number"}),"]  }>"]}),"\n",(0,s.jsx)(n.p,{children:"Add a placement selection to this action. This will be presented as a piece\nthat players can move into the desired location, snapping to the grid of\nthe destination as the player moves."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"piece"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["keyof ",(0,s.jsx)(n.code,{children:"A"})," | ",(0,s.jsx)(n.a,{href:"/api/classes/Piece",children:(0,s.jsx)(n.code,{children:"Piece"})}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A ",(0,s.jsx)(n.a,{href:"/api/classes/Piece",children:"Piece"})," to move or the name of the piece selection in this action"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"into"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:(0,s.jsx)(n.code,{children:"GameElement"})}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A ",(0,s.jsx)(n.a,{href:"/api/classes/GameElement",children:"GameElement"})," to move into"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.prompt?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.confirm?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"})," | [",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">> | (",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/api/modules#argument",children:(0,s.jsx)(n.code,{children:"Argument"})}),"<",(0,s.jsx)(n.code,{children:"P"}),">>]"]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as ",(0,s.jsx)(n.a,{href:"/api/classes/Action#message",children:"message"})," with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object. player => action({ prompt: 'Place your tile' }).chooseOnBoard( 'tile', player.my(Tile) ).placePiece( 'tile', $.map, { confirm: ({ ",(0,s.jsx)(n.strong,{children:"position"})," }) => [ 'Place tile into row {{row}} and column {{column}}?', ",(0,s.jsx)(n.strong,{children:"position"})," ] })"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options.validate?"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"args"}),": ",(0,s.jsx)(n.code,{children:"A"}),") => ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:['A function that takes an object of key-value pairs for all player choices and returns a boolean. The position selected will be available under the special choice name "',(0,s.jsx)(n.strong,{children:"placement"}),'". If false, the game will not allow the player to submit these choices. If a string is returned, this will display as the reason for disallowing these selections.']})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/classes/Action",children:(0,s.jsx)(n.code,{children:"Action"})}),"<",(0,s.jsx)(n.code,{children:"P"}),", ",(0,s.jsx)(n.code,{children:"A"})," & { ",(0,s.jsx)(n.code,{children:"__placement__"}),": [",(0,s.jsx)(n.code,{children:"number"}),", ",(0,s.jsx)(n.code,{children:"number"}),"]  }>"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aghull/boardzilla-core/blob/2c3998a/src/action/action.ts#L855",children:"boardzilla-core/src/action/action.ts:855"})})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var s=t(7294);const i={},l=s.createContext(i);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);